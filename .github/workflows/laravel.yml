name: Laravel

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  laravel-tests:

    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: laravel-absensi-pegawai
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
    - uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
      with:
        php-version: '7.4'
    - uses: actions/checkout@v3
    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"
    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
    - name: Generate key
      run: php artisan key:generate
    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache
    - name: Run Migrations
      run: php artisan migrate --force
    - name: Execute tests (Unit and Feature tests) via PHPUnit
      env:
        DB_PORT: ${{ job.services.mysql.ports[3306] }}
      run: vendor/bin/phpunit
  
  # laravel-build:
  #   runs-on: ubuntu-latest
  #   needs: laravel-tests
  #   services: # Service container Mysql
  #     mysql: # Label used to access the service container
  #       image: mysql:5.7
  #       env:
  #         MYSQL_ALLOW_EMPTY_PASSWORD: yes
  #         MYSQL_DATABASE:  laravel-absensi-pegawai
  #       ports:
  #         - 3306:3306
  #       options: >-  # Set health checks to wait until mysql database has started (it takes some seconds to start)
  #         --health-cmd="mysqladmin ping"
  #         --health-interval=10s
  #         --health-timeout=5s
  #         --health-retries=3
  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: Setup PHP
  #     uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
  #     with:
  #       php-version: '7.4'
  #       extensions: mbstring, intl, gd, xml, zip, dom, curl, fileinfo, json, iconv, bcmath, ctype, exif, ftp, iconv, mysqli, pdo_mysql, pdo_sqlite, tokenizer, xmlwriter, xsl, zip
  #       coverage: none
  #   - name: Copy .env
  #     run: php -r "file_exists('.env') || copy('.env.example', '.env');"
  #   - name: Install Dependencies
  #     run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
  #   - name: Generate key
  #     run: php artisan key:generate
  #   - name: Directory Permissions
  #     run: chmod -R 777 storage bootstrap/cache
  #   - name: Clear Config
  #     run: php artisan config:clear
  #   - name: Run Migration
  #     run: php artisan migrate --force
